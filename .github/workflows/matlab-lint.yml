# .github/workflows/matlab-lint.yml
name: matlab-lint (changed files only)

on:
  workflow_dispatch:
  push:
    branches: [ReBase]
  pull_request:
    branches: [ReBase]

jobs:
  mlint:
    runs-on: ubuntu-latest
    env:
      # Default policy; can be overridden per step if you like
      MLINT_FAIL_ON: "any"
      MLINT_EXCLUDE: ".git/**,.github/**,node_modules/**,external/**,thirdparty/**,build/**,dist/**,generated/**"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup MATLAB
        uses: matlab-actions/setup-matlab@v2
        with:
          release: R2024b

      # Figure out which .m files changed for this run (PR or push)
      - name: Compute changed MATLAB files
        id: changed
        shell: bash
        run: |
          set -euo pipefail

          if [[ "${{ github.event_name }}" == "pull_request" ]]; then
            BASE="${{ github.event.pull_request.base.sha }}"
            HEAD="${{ github.sha }}"
          else
            # On push, diff against merge-base with the default branch
            DEFAULT_BRANCH="${{ github.event.repository.default_branch }}"
            git fetch origin "$DEFAULT_BRANCH":"refs/remotes/origin/$DEFAULT_BRANCH" --depth=1
            BASE=$(git merge-base "origin/${DEFAULT_BRANCH}" "${{ github.sha }}")
            HEAD="${{ github.sha }}"
          fi

          echo "Base: $BASE"
          echo "Head: $HEAD"

          # Collect changed .m files, comma-separated for MLINT_INCLUDE
          CHANGED=$(git diff --name-only "$BASE" "$HEAD" -- '*.m' | sed '/^$/d' || true)
          if [[ -z "$CHANGED" ]]; then
            echo "No changed MATLAB files."
            echo "has_files=false" >> "$GITHUB_OUTPUT"
            echo "include=" >> "$GITHUB_OUTPUT"
          else
            echo "Changed MATLAB files:"
            echo "$CHANGED"
            INCLUDE=$(echo "$CHANGED" | tr '\n' ',' | sed 's/,$//')
            echo "has_files=true" >> "$GITHUB_OUTPUT"
            echo "include=$INCLUDE" >> "$GITHUB_OUTPUT"
          fi

      # If no MATLAB files changed, publish a tiny summary and finish early
      - name: Publish summary (no MATLAB changes)
        if: steps.changed.outputs.has_files == 'false'
        run: |
          {
            echo "## MATLAB Lint Summary"
            echo ""
            echo "_No MATLAB (.m) files changed in this ${GITHUB_EVENT_NAME} â€” skipping lint._"
          } >> "$GITHUB_STEP_SUMMARY"

      # Run lint only when there are changed .m files
      - name: Run mlint (from ./scripts) on changed files
        if: steps.changed.outputs.has_files == 'true'
        uses: matlab-actions/run-command@v2
        env:
          MLINT_INCLUDE: ${{ steps.changed.outputs.include }}  # only changed files
          MLINT_FAIL_ON: ${{ env.MLINT_FAIL_ON }}              # "any" | "error" | "none"
          MLINT_EXCLUDE: ${{ env.MLINT_EXCLUDE }}
        with:
          command: addpath('scripts'); run_mlint

      - name: Upload lint artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: matlab-lint
          path: lint/**
          if-no-files-found: warn

      - name: Publish run summary (results)
        if: always()
        run: |
          if [ -f lint/mlint-summary.md ]; then
            cat lint/mlint-summary.md >> "$GITHUB_STEP_SUMMARY"
          fi

      - name: Upload SARIF to Code scanning
        if: always()
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: lint/mlint.sarif
