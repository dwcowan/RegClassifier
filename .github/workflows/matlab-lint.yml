name: matlab-lint (PR:any, push:error)

on:
  workflow_dispatch:
  push:
    branches: [ReBase]
  pull_request:
    branches: [ReBase]

jobs:
  mlint:
    runs-on: ubuntu-latest
    env:
      MLINT_EXCLUDE: ".git/**,.github/**,node_modules/**,external/**,thirdparty/**,build/**,dist/**,generated/**"
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup MATLAB
        uses: matlab-actions/setup-matlab@v2
        with:
          release: R2024b

      - name: Compute changed MATLAB files
        id: changed
        shell: bash
        run: |
          set -euo pipefail

          EVENT="${{ github.event_name }}"
          HEAD="${{ github.sha }}"
          DEFAULT_BRANCH="${{ github.event.repository.default_branch }}"

          if [[ "$EVENT" == "pull_request" ]]; then
            BASE="${{ github.event.pull_request.base.sha }}"
          elif [[ "$EVENT" == "push" ]]; then
            BASE="${{ github.event.before }}"
            if [[ -z "$BASE" || "$BASE" == "0000000000000000000000000000000000000000" ]]; then
              echo "Push event without valid 'before'; falling back to merge-base with default branch"
              git fetch --no-tags --prune --depth=1 origin "$DEFAULT_BRANCH":"refs/remotes/origin/$DEFAULT_BRANCH"
              BASE="$(git merge-base "origin/$DEFAULT_BRANCH" "$HEAD" || true)"
            fi
          else
            git fetch --no-tags --prune --depth=1 origin "$DEFAULT_BRANCH":"refs/remotes/origin/$DEFAULT_BRANCH"
            BASE="$(git merge-base "origin/$DEFAULT_BRANCH" "$HEAD" || true)"
          fi

          if [[ -z "${BASE:-}" ]]; then
            BASE="$(git rev-list --max-parents=0 "$HEAD" | tail -n1 || true)"
          fi

          echo "Base: ${BASE:-<none>}"
          echo "Head: $HEAD"

          CHANGED="$(git diff --name-only "${BASE:-}" "$HEAD" -- '*.m' | sed '/^$/d' || true)"

          if [[ -z "$CHANGED" ]]; then
            echo "No changed MATLAB files."
            echo "has_files=false" >> "$GITHUB_OUTPUT"
            echo "include=" >> "$GITHUB_OUTPUT"
          else
            echo "Changed MATLAB files:"
            echo "$CHANGED"
            INCLUDE="$(echo "$CHANGED" | tr '\n' ',' | sed 's/,$//')"
            echo "has_files=true" >> "$GITHUB_OUTPUT"
            echo "include=$INCLUDE" >> "$GITHUB_OUTPUT"
          fi

      - name: Set MLINT policy (PR:any, push:error)
        id: policy
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            echo "value=any" >> $GITHUB_OUTPUT
          else
            echo "value=error" >> $GITHUB_OUTPUT
          fi

      - name: Run mlint (from ./scripts) on changed files
        if: steps.changed.outputs.has_files == 'true'
        uses: matlab-actions/run-command@v2
        env:
          MLINT_INCLUDE: ${{ steps.changed.outputs.include }}
          MLINT_FAIL_ON: ${{ steps.policy.outputs.value }}
          MLINT_EXCLUDE: ${{ env.MLINT_EXCLUDE }}
        with:
          command: addpath('scripts'); run_mlint

      - name: Upload lint artifacts
        if: always() && hashFiles('lint/**') != ''
        uses: actions/upload-artifact@v4
        with:
          name: matlab-lint
          path: lint/**
          if-no-files-found: warn

      - name: Publish run summary
        if: always() && hashFiles('lint/mlint-summary.md') != ''
        run: cat lint/mlint-summary.md >> "$GITHUB_STEP_SUMMARY"
